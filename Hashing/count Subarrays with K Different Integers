https://leetcode.com/problems/subarrays-with-k-different-integers/description/

Refer Day - 6 1:22:32

class Solution {
public:
    int subarraysWithKDistinct(vector<int>& nums, int k) {
        
        return atmost(nums,k) - atmost(nums,k-1);
    }

    int atmost(vector<int> &nums,int k)
    {
        int n = nums.size();
        int cnt = 0;
        unordered_map<int,int>mp;
        int distinct = 0;
        int i =0,j=0;
        while(j<n)
        {
            if(mp.find(nums[j]) != mp.end())
            {
                mp[nums[j]]++;
            }
            else{
                mp[nums[j]] = 1;
                distinct++;
            }

            while(i<=j & distinct > k)
            {
                mp[nums[i]]--;
                if(mp[nums[i]] == 0)
                {
                    distinct--;
                    mp.erase(nums[i]);
                }
                i++;
            }

            cnt += j-i+1;
            j++;
        }

        return cnt;
    }
};
