We have to search a target in rotated search array

arr[] = {7,8,1,2,3,3,3,4,5,6} target = 3

Here try to trim down the things which are having duplicated in low, mid, and high part

example :  [3,1,2,3,3,3,3,3]

For example after the ele 2 the mid is at 3 the if we want to check for target = 1 then we will eleminate the left part because  3<=3 && 3<=3

Who knows the target element will contain in left part


while(l<=h)
        {
            int mid = (l+h)/2;
            if(nums[mid] == target) return true;
            if (nums[l] == nums[mid] && nums[mid] == nums[h]) {
                l++;
                h--;
            }
            else if(nums[l]<=nums[mid])
            {
                if(nums[l]<=target && target <= nums[mid]) h = mid - 1;
                else l = mid + 1;
            }
            else 
            {
                if(nums[mid]<=target && target <= nums[h]) l = mid + 1;
                else h = mid - 1;
            }
        }

        return false;
